Class {
	#name : 'BlEmoji',
	#superclass : 'Object',
	#classInstVars : [
		'basicEmojiValues'
	],
	#category : 'BlocIM',
	#package : 'BlocIM'
}

{ #category : 'initialization' }
BlEmoji class >> initialize [

	self installCodePoints
]

{ #category : 'initialization' }
BlEmoji class >> installCodePoints [

	<script: 'BlEmoji installCodePoints'>
	basicEmojiValues := STON fromString:
		                    'Set[129303,129315,129327,129467,129479,129491,129655,129783,10024,128210,128538,128058,128702,128222,129346,129510,127906,128550,128070,10060,127754,128234,127918,128562,128082,128726,128246,127766,129358,127930,128574,128094,129370,128258,129382,129522,127942,128586,128106,129534,128270,127790,129394,127954,129686,128118,128762,128282,127802,129406,129698,129710,128130,129722,128294,127814,129418,9804,127978,128142,129734,128306,127826,129430,129746,128154,129442,127838,128002,128646,128166,129454,127850,128014,128658,128178,129302,128342,127862,127382,128026,127546,128190,128670,128354,127874,128518,128038,128682,128202,128998,129314,129326,128530,129466,129478,129490,129654,129782,9203,10175,128209,128537,128057,128701,128221,129345,129509,127905,128549,128069,129673,128233,127753,129357,127917,128561,128081,128725,10071,127765,128245,127929,128573,128093,129369,128257,129381,129521,127941,128585,128105,129533,128269,127789,129393,127953,129685,128117,128761,128281,127801,129405,129697,129709,128129,129721,128293,127813,129417,9803,127977,128141,129733,128305,127825,129429,129745,128153,128317,127837,129441,128001,128645,128165,129769,129453,127849,128013,128657,128177,129301,128341,127861,127381,128025,127545,128189,128669,128353,127873,128517,128037,128681,128201,128997,129313,127885,128529,129325,129465,129337,129477,129489,129653,129781,128536,128056,128700,128220,129344,129508,127904,128548,128068,129660,128232,127752,129356,127916,128560,128080,129520,128244,127764,129368,127928,128572,9918,128092,128256,127776,128420,127940,128584,126980,128104,128268,128748,129380,127952,129392,128116,128760,128280,127800,129404,129532,129672,128128,129684,128292,127812,129416,9802,127976,128140,129696,128304,127824,129428,127988,129708,9978,128152,128316,127836,129440,128000,128644,128164,129720,129452,127848,129732,128012,128656,128176,129300,128340,127860,127380,128024,127544,128188,128668,128352,127872,128516,128036,128680,128200,128996,129312,127884,128528,129008,128692,129324,129336,129464,129476,129488,129652,129744,129756,129768,129780,127891,128535,128055,128699,128219,129343,129507,128547,128067,129671,128231,127751,129355,127915,128559,128079,129519,10069,127763,128243,127927,128571,9917,128091,128255,127775,128735,127939,128583,128103,128747,128267,129367,129379,127951,129391,128115,128759,128279,127799,129403,129531,129683,128127,129695,128291,127811,129415,9801,127975,128139,129707,128303,127823,129427,129719,129731,128151,129743,128315,127835,129439,127999,128643,9989,128163,129451,127847,129755,128011,128655,128175,129299,128339,127859,127379,128023,128667,128187,129311,128351,127871,128515,128035,128679,128199,128995,129323,127883,128527,128047,128691,129335,129463,129475,129487,129651,129767,129779,10160,9200,127890,128534,128054,128698,128218,129342,129506,128546,128066,129670,128230,127750,129354,127914,128558,128078,128722,10068,127762,128242,127926,128406,128090,128570,128734,127774,129366,127938,128582,128102,129378,128266,129390,129518,129530,129682,9940,128114,128278,128758,129402,129694,129706,128126,129718,128290,127810,129414,9800,127974,11088,128138,128302,127822,129426,129730,129742,128150,129754,128314,127834,129438,127998,128642,128162,129766,129450,127846,128010,128654,128174,129298,128338,127858,127378,128022,127542,128186,128666,128350,127870,128514,128034,128678,128198,128994,129310,127882,128526,128046,128690,129322,129334,129462,129474,129486,129498,129650,129778,9855,127889,128533,128053,128697,128217,129341,129505,128545,129669,128709,128229,127749,129353,127913,128557,128077,128721,10067,127761,128241,127925,128405,128089,128569,128733,127773,129365,127937,128581,128101,129377,128265,129389,129517,129529,129681,128113,128757,128277,127797,129401,129693,129705,128125,129717,128289,127809,129413,127973,129729,128137,128301,127821,129425,9811,129753,128149,128313,127833,129437,127997,128641,128161,129765,129449,127845,128009,128653,128173,129297,128337,127857,127377,128021,127541,128185,128665,128349,128993,128513,128033,128677,128197,129309,129321,127881,128525,128045,128689,129333,129461,129473,129485,129497,129649,129777,127888,128532,128052,128696,128216,129340,129504,9726,128544,128064,128708,128228,127748,129352,127912,128556,128076,128720,128240,127760,129364,127924,128568,128088,128732,128252,127772,129376,127936,128580,128100,129516,128264,129388,129528,129668,129680,128112,128756,128276,127796,129400,129692,129704,128124,129716,128288,127808,129412,127972,129728,9962,128136,128300,127820,129424,9810,127984,128148,129752,128312,127832,129436,127996,128640,128160,129764,129448,127844,128008,128652,128172,129296,128336,127856,129460,128020,127540,128184,128664,128348,127868,128512,128032,128676,128196,128992,129308,127880,128524,128044,128688,128208,129320,129332,129472,129484,129496,129648,129776,127887,128531,128051,128695,128215,129503,9725,128543,9889,128707,128227,127747,129351,127911,128555,128075,129515,128239,127759,129363,9749,127923,128087,128567,128251,127771,129375,127935,128579,9925,128099,128263,129387,129527,129667,128591,128111,129679,128275,127795,129399,129691,129703,128123,129715,128287,127807,129411,127971,129727,128135,128299,127819,129423,9809,127983,9973,128147,128311,127831,129435,127995,129751,128159,129763,129447,127843,128007,128651,128171,129295,129459,127855,128019,127539,128183,128663,128347,127867,128511,128031,128675,128195,129307,128359,127879,128523,128043,128687,128207,129003,129319,129331,129471,129483,129495,129659,9196,127886,128050,128694,128214,129338,128378,129502,128542,128062,128706,128226,127746,129514,127910,128554,128074,129666,128238,127758,129362,9748,127922,11036,128086,128250,127770,128566,127934,128578,9924,128098,128262,129374,129386,127946,128590,128110,129526,128274,127794,129398,129690,129702,128122,129714,128286,127806,129410,127970,129726,128134,128298,127818,129422,9808,127982,128146,129750,128310,127830,129434,127994,127514,128158,129762,129446,127842,128006,128650,128170,129294,128334,127854,127374,128018,127538,128182,128662,128346,127866,127386,128030,128510,128194,128674,128358,127878,128522,128042,128686,128206,129002,129306,129318,129330,129458,129470,129482,129494,129658,9195,9875,127569,128049,128213,128693,129501,128541,128061,128705,128225,127745,129349,127909,128553,9899,128073,128237,127757,129361,127921,128565,11035,128085,128249,127769,129373,127933,128577,128097,129513,128261,129385,129525,127945,128589,128109,129665,128273,127793,129397,129689,129701,128121,129713,8987,127805,128285,127969,127489,128133,129409,128297,127817,129421,9807,127981,9971,128145,10135,127829,128309,127993,129433,128157,129725,129445,127841,129749,128005,128649,9995,128169,128333,127853,129293,128017,128661,128181,129305,128345,127865,127385,128029,128509,128193,128673,128357,127877,128521,128041,128685,128205,129001,129317,129329,129457,129469,129481,129493,129657,129761,9194,128048,127568,128212,129500,128540,128060,128704,128224,127744,129348,127908,128552,9898,128072,10062,127756,128236,127920,128564,128084,128716,128248,127768,129360,127932,128576,128096,129372,128260,129384,129512,127944,128588,9934,128108,128272,127792,129396,129524,129664,128120,128764,8986,127804,128284,127968,129408,128132,129688,128296,127816,129420,9806,127980,9970,128144,10134,127828,128308,127992,129432,128156,129700,129444,127840,129712,128004,128648,9994,128168,128332,127852,129292,128016,128660,128180,129304,128344,127864,127384,128028,128508,128192,128672,128356,127876,128520,128040,128684,128204,129000,129316,129328,129456,129468,129480,129492,129656,129724,129748,129760,129784,9193,128211,129499,128539,128059,128703,128223,129347,129511,127907,128551,128071,128235,127755,129359,127919,128563,128083,128727,128247,127767,129371,127931,128575,128095,129523,128259,129383,129535,127943,128587,128107,129687,128271,127791,129395,127955,129699,128119,128763,128283,127803,129407,129711,129723,128131,128295,127815,129419,9805,127979,11093,128143,10133,127183,127827,128307,129431,9981,128155,129443,127839,129747,128003,128647,128167,129759,128331,127851,129455,128015,127535,128179,128659,128343,127863,127383,128027,128507,128191,128671,128355,127875,128519,128039,128683,128203,128999]'
]

{ #category : 'initialization' }
BlEmoji class >> installCodePointsFromNetwork [

	<script: 'BlEmoji installCodePointsFromNetwork'>
	| text newBasicEmojiValues |
	text := (ZnEasy get:
		         'https://unicode.org/Public/emoji/16.0/emoji-sequences.txt')
		        entity string.
	newBasicEmojiValues := Set new: 1200.
	text linesDo: [ :line |
		line ifNotEmpty: [
			line first ~= $# ifTrue: [
				| end terms |
				end := line indexOf: $;.
				terms := (line first: end - 1) trim substrings.
				terms size = 1 ifTrue: [
					| nums |
					nums := terms first substrings: '..'.
					nums size = 1 ifTrue: [
						newBasicEmojiValues add: ('16r' , nums first) asNumber ].
					nums size = 2 ifTrue: [
						newBasicEmojiValues addAll:
							(('16r' , nums first) asNumber to:
							 ('16r' , nums second) asNumber) ] ] ] ] ].
	basicEmojiValues := newBasicEmojiValues
]

{ #category : 'testing' }
BlEmoji class >> isEmoji: aCharacter [

	^ basicEmojiValues includes: aCharacter codePoint
]
